// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
[
  {
    "context": "Dock",
    "bindings": {
      "ctrl-w h": "workspace::ActivatePaneLeft",
      "ctrl-w l": "workspace::ActivatePaneRight",
      "ctrl-w k": "workspace::ActivatePaneUp",
      "ctrl-w j": "workspace::ActivatePaneDown"
      // ... or other keybindings
    }
  },
  {
    "context": "vim_mode == normal",
    "bindings": {
      "ctrl-u": ["workspace::SendKeystrokes", "1 8 k z z"],
      "ctrl-d": ["workspace::SendKeystrokes", "1 8 j z z"],
      "H": ["workspace::SendKeystrokes", "^"],
      "L": ["workspace::SendKeystrokes", "$"],
      "tab": ["workspace::SendKeystrokes", "ctrl-i"]
    }
  },
  {
    "context": "FileFinder",
    "bindings": {
      "ctrl": null,
      "alt": "file_finder::ToggleMenu"
    }
  },
  {
    "context": "FileFinder && !menu_open",
    "bindings": {
      "ctrl-shift-p": null,
      "ctrl-j": null,
      "ctrl-k": null,
      "ctrl-h": null,
      "ctrl-l": null,
      "alt-k": "pane::SplitDown",
      "alt-i": "pane::SplitUp",
      "alt-j": "pane::SplitLeft",
      "alt-l": "pane::SplitRight"
    }
  },
  // https://zed.dev/docs/completions#keybinding-example-displaying-tab-and-alt-tab-on-linux
  {
    "context": "Editor && edit_prediction",
    "bindings": {
      "alt-i": "editor::AcceptEditPrediction",
      "tab": null,
      "alt-l": null,
      "alt-tab": null
    }
  },
  {
    "context": "vim_mode == insert && edit_prediction",
    "bindings": {
      "tab": "editor::AcceptEditPrediction"
    }
  },
  {
    "context": "vim_mode == insert && edit_prediction_conflict",
    "bindings": {
      "alt-i": "editor::AcceptEditPrediction",
      // Optional: This makes the default `alt-l` binding do nothing.
      "alt-l": null
    }
  }
]
